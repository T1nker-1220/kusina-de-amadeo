rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.admin == true || 
         exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
    }

    // Products collection
    match /products/{productId} {
      allow read: if true;  // Anyone can read products
      allow write: if isAuthenticated();  // Only authenticated users can write
    }

    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
    }

    // Carts collection
    match /carts/{userId} {
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
    }

    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
